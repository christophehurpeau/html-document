{"version":3,"sources":["../../../src/HTMLElement/elements/HTMLDocumentElement.js"],"names":[],"mappings":";;;wBAC0B,UAAU;;AAEpC,IAAM,GAAG,GAAG,kBAAkB,CAAC;AAC/B,IAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,GAAG,UAAU,CAAC,CAAC;;AAE3C,IAAI,CAAC,yFAAyF,EAAE,YAAM;AAClG,QAAI,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;AAC9B,YAAQ,CAAC,eAAe,CAAC,SAAS,GAAG,eAAe,CAAC;AACrD,+BAAY,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;CAC5D,CAAC,CAAC;;AAEH,IAAI,CAAC,kGAAkG,EAAE,YAAM;AAC3G,QAAI,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;AAC9B,YAAQ,CAAC,eAAe,CAAC,SAAS,GAAG,6CAA6C,CAAC;AACnF,+BAAY,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AACzD,+BAAY,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;CAChD,CAAC,CAAC;;AAEH,IAAI,CAAC,gGAAgG,EAAE,YAAM;AACzG,QAAI,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;AAC9B,YAAQ,CAAC,eAAe,CAAC,SAAS,GAAG,gCAAgC,CAAC;AACtE,+BAAY,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AACzD,+BAAY,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;CAC5C,CAAC,CAAC;;AAEH,IAAI,CAAC,uEAAuE,EAAE,YAAM;AAChF,QAAI,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;AAC9B,YAAQ,CAAC,eAAe,CAAC,SAAS,GAAG,oDAAoD,CAAC;AAC1F,+BAAY,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AACzD,+BAAY,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,sBAAsB,CAAC,CAAC;AAC7D,+BAAY,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;CAChD,CAAC,CAAC;;AAEH,IAAI,CAAC,iCAAiC,EAAE,YAAM;AAC1C,QAAI,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;AAC9B,YAAQ,CAAC,eAAe,CAAC,SAAS,GAAG,6CAA6C,CAAC;AACnF,QAAI,aAAa,GAAG,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAC7D,+BAAY,aAAa,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AAC9C,+BAAY,aAAa,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;CAChF,CAAC,CAAC","file":"HTMLDocumentElement.js","sourcesContent":["/* global test */\nimport {strictEqual} from 'proclaim';\n\nconst lib = '../../../../lib/';\nconst Document = require(lib + 'Document');\n\ntest('should popup HTMLDocumentElement if imported through document.documentElement.innerHTML', () => {\n    let document = new Document();\n    document.documentElement.innerHTML = '<html></html>';\n    strictEqual(document.documentElement.children.length, 0);\n});\n\ntest('should popup HTMLDocumentElement children if imported through document.documentElement.innerHTML', () => {\n    let document = new Document();\n    document.documentElement.innerHTML = '<html><head></head><body>test</body></html>';\n    strictEqual(document.documentElement.children.length, 2);\n    strictEqual(document.body.innerHTML, 'test');\n});\n\ntest('should popup HTMLDocumentElement values if imported through document.documentElement.innerHTML', () => {\n    let document = new Document();\n    document.documentElement.innerHTML = '<html><body>test</body></html>';\n    strictEqual(document.documentElement.children.length, 1);\n    strictEqual(document.head.innerHTML, '');\n});\n\ntest('should not popup HTMLDocumentElement children if no <html> in content', () => {\n    let document = new Document();\n    document.documentElement.innerHTML = '<head><title>test1</title></head><body>test</body>';\n    strictEqual(document.documentElement.children.length, 2);\n    strictEqual(document.head.innerHTML, '<title>test1</title>');\n    strictEqual(document.body.innerHTML, 'test');\n});\n\ntest('should do same as above on copy', () => {\n    let document = new Document();\n    document.documentElement.innerHTML = '<html><head></head><body>test</body></html>';\n    let documentClone = document.documentElement.cloneNode(true);\n    strictEqual(documentClone.children.length, 2);\n    strictEqual(documentClone.getElementsByTagName('body')[0].innerHTML, 'test');\n});\n\n"]}