{"version":3,"sources":["../../../src/HTMLElement/elements/HTMLFormElement.js"],"names":[],"mappings":"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","file":"HTMLFormElement.js","sourcesContent":["/* global test */\nimport { strictEqual, deepEqual, ok, throws } from 'proclaim';\nconst lib = '../../../../lib/';\n\nconst HTMLFormElement = require(lib + 'HTMLElement/elements/HTMLFormElement');\nconst Document = require(lib + 'Document');\n\ntest('HTMLFormElement should have the nodeName == form ', () => {\n    let elt = new HTMLFormElement();\n    elt._ownerDocument = new Document();\n    strictEqual(elt.nodeName, 'form');\n});\n\ntest('document.createElement should create object', () => {\n    const document = new Document();\n    let meta = document.createElement('form');\n    ok(meta instanceof HTMLFormElement);\n});\n\ntest('Should set and get acceptCharset', () => {\n    let elt = new HTMLFormElement();\n    elt._ownerDocument = new Document();\n\n    strictEqual(elt.acceptCharset, '');\n\n    elt.acceptCharset = 'utf-8';\n    strictEqual(elt.getAttribute('accept-charset'), 'utf-8');\n\n    elt.setAttribute('accept-charset', 'koi8-r');\n    strictEqual(elt.acceptCharset, 'koi8-r');\n});\n\ntest('Should set and get action', () => {\n    let elt = new HTMLFormElement();\n    elt._ownerDocument = new Document();\n\n    strictEqual(elt.action, '');\n\n    elt.action = 'some';\n    strictEqual(elt.getAttribute('action'), 'some');\n\n    elt.setAttribute('action', 'other');\n    strictEqual(elt.action, 'other');\n});\n\ntest('Should set and get autocomplete', () => {\n    let elt = new HTMLFormElement();\n    elt._ownerDocument = new Document();\n\n    strictEqual(elt.autocomplete, '');\n\n    elt.autocomplete = 'yes';\n    strictEqual(elt.getAttribute('autocomplete'), 'yes');\n\n    elt.setAttribute('autocomplete', 'no');\n    strictEqual(elt.autocomplete, 'no');\n});\n\ntest('Should get elements', () => {\n    let elt = new HTMLFormElement();\n    elt._ownerDocument = new Document();\n\n    deepEqual(elt.elements, []);\n    strictEqual(elt.elements.length, 0);\n});\n\ntest('Should get inner elements', () => {\n    let elt = new HTMLFormElement();\n    elt._ownerDocument = new Document();\n    elt.innerHTML = '<div></div><input type=\"text\">';\n\n    strictEqual(elt.elements.length, 1);\n});\n\ntest('Should not set elements', () => {\n    let elt = new HTMLFormElement();\n    elt._ownerDocument = new Document();\n    throws(() => {\n        elt.elements = [];\n    });\n});\n\ntest('Should set and get encoding and enctype', () => {\n    let elt = new HTMLFormElement();\n    elt._ownerDocument = new Document();\n\n    strictEqual(elt.encoding, '');\n    strictEqual(elt.enctype, '');\n\n    elt.encoding = 'some';\n    strictEqual(elt.getAttribute('encoding'), null);\n    strictEqual(elt.getAttribute('enctype'), 'some');\n\n    elt.setAttribute('enctype', 'some');\n    strictEqual(elt.getAttribute('enctype'), 'some');\n    strictEqual(elt.enctype, 'some');\n});\n\ntest('Should get length', () => {\n    let elt = new HTMLFormElement();\n    elt._ownerDocument = new Document();\n\n    strictEqual(elt.length, 0);\n});\n\ntest('Should get inner elements length', () => {\n    let elt = new HTMLFormElement();\n    elt._ownerDocument = new Document();\n    elt.innerHTML = '<div></div><input type=\"text\">';\n\n    strictEqual(elt.length, 1);\n});\n\ntest('Should not set length', () => {\n    let elt = new HTMLFormElement();\n    elt._ownerDocument = new Document();\n    throws(() => {\n        elt.length = 2;\n    });\n});\n\ntest('Should set and get method', () => {\n    let elt = new HTMLFormElement();\n    elt._ownerDocument = new Document();\n\n    strictEqual(elt.method, '');\n\n    elt.method = 'post';\n    strictEqual(elt.getAttribute('method'), 'post');\n\n    elt.setAttribute('method', 'get');\n    strictEqual(elt.method, 'get');\n\n    elt.method = 'some';\n    strictEqual(elt.method, 'get');\n});\n\ntest('Should set and get name', () => {\n    let elt = new HTMLFormElement();\n    elt._ownerDocument = new Document();\n\n    strictEqual(elt.name, '');\n\n    elt.name = 'post';\n    strictEqual(elt.getAttribute('name'), 'post');\n\n    elt.setAttribute('name', 'get');\n    strictEqual(elt.name, 'get');\n});\n\ntest('Should set and get noValidate', () => {\n    let elt = new HTMLFormElement();\n    elt._ownerDocument = new Document();\n\n    strictEqual(elt.noValidate, false);\n\n    elt.noValidate = true;\n    strictEqual(elt.getAttribute('novalidate'), 'true');\n\n    elt.noValidate = false;\n    strictEqual(elt.getAttribute('novalidate'), null);\n});\n\ntest('Should set and get target', () => {\n    let elt = new HTMLFormElement();\n    elt._ownerDocument = new Document();\n\n    strictEqual(elt.target, '');\n\n    elt.target = 'some';\n    strictEqual(elt.getAttribute('target'), 'some');\n\n    elt.setAttribute('target', 'get');\n    strictEqual(elt.target, 'get');\n});\n\ntest('Should call submit event on submit', (done) => {\n    let elt = new HTMLFormElement();\n    elt._ownerDocument = new Document();\n\n    elt.addEventListener('submit', () => {\n        done();\n    }, true);\n    elt.submit();\n});\n\ntest('Should call submit event on reset', (done) => {\n    let elt = new HTMLFormElement();\n    elt._ownerDocument = new Document();\n\n    elt.addEventListener('reset', () => {\n        done();\n    }, true);\n    elt.reset();\n});\n\ntest('Should clear all values on reset', () => {\n    let elt = new HTMLFormElement();\n    elt._ownerDocument = new Document();\n    let input = elt._ownerDocument.createElement('input');\n    input.type = 'text';\n    input.setAttribute('value', 'some');\n    elt.appendChild(input);\n    elt.reset();\n    strictEqual(input.getAttribute('value'), '');\n});\n\ntest('Should not clear all values on reset if event is prevented', () => {\n    let elt = new HTMLFormElement();\n    elt._ownerDocument = new Document();\n    let input = elt._ownerDocument.createElement('input');\n    input.type = 'text';\n    input.setAttribute('value', 'some');\n    elt.appendChild(input);\n    elt.addEventListener('reset', (event) => {\n        event.preventDefault();\n    });\n    elt.reset();\n    strictEqual(input.getAttribute('value'), 'some');\n});\n"]}