{"version":3,"sources":["../../../src/HTMLElement/elements/HTMLTableRowElement.js"],"names":[],"mappings":"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","file":"HTMLTableRowElement.js","sourcesContent":["/* global test */\nimport { throws, ok, strictEqual } from 'proclaim';\n\nconst lib = '../../../../lib/';\n\nconst HTMLTableRow = require(lib + 'HTMLElement/elements/HTMLTableRowElement');\nconst Document = require(lib + 'Document');\n\ntest('HTMLTableRow should insert cells', () => {\n    const elt = new HTMLTableRow();\n    elt._ownerDocument = new Document();\n    const cell = elt.insertCell();\n    ok(Object.is(elt.childNodes[0], cell));\n});\n\ntest('HTMLTableRow should insert cells to given index', () => {\n    const elt = new HTMLTableRow();\n    elt._ownerDocument = new Document();\n    elt.insertCell();\n    const cell = elt.insertCell(0);\n    ok(Object.is(elt.childNodes[0], cell));\n});\n\ntest('HTMLTableRow should insert cells to end of list', () => {\n    const elt = new HTMLTableRow();\n    elt._ownerDocument = new Document();\n    elt.insertCell();\n    elt.insertCell();\n    const cell = elt.insertCell(1);\n    ok(Object.is(elt.childNodes[1], cell));\n});\n\ntest('HTMLTableRow should not insert cells after end of list', () => {\n    const elt = new HTMLTableRow();\n    elt._ownerDocument = new Document();\n    elt.insertCell();\n    elt.insertCell();\n    throws(() => {\n        elt.insertCell(10);\n    }, 'The index is not in the allowed range.');\n});\n\ntest('HTMLTableRow should throw if index wrong', () => {\n    const elt = new HTMLTableRow();\n    throws(() => {\n        elt.deleteCell(1);\n    }, 'The index is not in the allowed range.');\n});\n\ntest('HTMLTableRow should delete cell', () => {\n    const elt = new HTMLTableRow();\n    elt._ownerDocument = new Document();\n    elt.innerHTML = '<td>1</td><td>2</td>';\n    elt.deleteCell(0);\n    strictEqual(elt.innerHTML, '<td>2</td>');\n});\n\ntest('HTMLTableRow ch returns dot', () => {\n    const elt = new HTMLTableRow();\n    strictEqual(elt.ch, '.');\n});\n\ntest('HTMLTableRow chOff returns 0', () => {\n    const elt = new HTMLTableRow();\n    strictEqual(elt.chOff, 0);\n});\n\ntest('HTMLTableRow vAlign sets and gets', () => {\n    const elt = new HTMLTableRow();\n    elt.vAlign = 'top';\n    strictEqual(elt.vAlign, 'top');\n    elt.vAlign = 'no value';\n    strictEqual(elt.vAlign, 'top');\n    elt.vAlign = 'bottom';\n    strictEqual(elt.vAlign, 'bottom');\n});\n\ntest('HTMLTableRow align sets and gets', () => {\n    const elt = new HTMLTableRow();\n    elt.align = 'left';\n    strictEqual(elt.align, 'left');\n    elt.align = 'no value';\n    strictEqual(elt.align, 'left');\n    elt.align = 'right';\n    strictEqual(elt.align, 'right');\n});\n\ntest('HTMLTableRow sectionRowIndex returns -1 if no parent', () => {\n    const elt = new HTMLTableRow();\n    strictEqual(elt.sectionRowIndex, -1);\n});\n\ntest('HTMLTableRow sectionRowIndex returns index within section', () => {\n    const document = new Document();\n    document.body.innerHTML = '<table><tr><td>First row</td></tr><tr id=\"test\">Second row</tr></table>';\n    const row = document.body.getElementById('test');\n    strictEqual(row.sectionRowIndex, 1);\n});\n\ntest('HTMLTableRow rowIndex returns -1 if no parent', () => {\n    const elt = new HTMLTableRow();\n    strictEqual(elt.rowIndex, -1);\n});\n\ntest('HTMLTableRow rowIndex returns index within table', () => {\n    const document = new Document();\n    document.body.innerHTML = '<table><thead><tr><td>Header</td></tr></thead>' +\n        '<tbody><tr><td>First row</td></tr><tr id=\"test\">Second row</tr></tbody></table>';\n    const row = document.body.getElementById('test');\n    strictEqual(row.rowIndex, 2);\n});\n\ntest('HTMLTableRow rowIndex returns index within table head', () => {\n    const document = new Document();\n    document.body.innerHTML = '<table><thead><tr id=\"test\"><td>Header</td></tr></thead>' +\n        '<tbody><tr><td>First row</td></tr><tr>Second row</tr></tbody></table>';\n    const row = document.body.getElementById('test');\n    strictEqual(row.rowIndex, 0);\n});\n\ntest('HTMLTableRow rowIndex returns index within table foot', () => {\n    const document = new Document();\n    document.body.innerHTML = '<table><thead><tr><td>Header</td></tr></thead>' +\n        '<tbody><tr><td>First row</td></tr><tr>Second row</tr></tbody>' +\n        '<tfoot><tr id=\"test\">Some test</tr></tfoot></table>';\n    const row = document.body.getElementById('test');\n    strictEqual(row.rowIndex, 3);\n});\n"]}