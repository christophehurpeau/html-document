{"version":3,"sources":["../../../src/HTMLElement/elements/HTMLLinkElement.js"],"names":[],"mappings":"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","file":"HTMLLinkElement.js","sourcesContent":["/* global test */\nimport assert from 'proclaim';\nconst expect = assert.strictEqual;\n\nconst lib = '../../../../lib/';\n\nconst HTMLLinkElement = require(lib + 'HTMLElement/elements/HTMLLinkElement');\nconst Document = require(lib + 'Document');\n\ntest('HTMLLinkElement should have the nodeName == link ', () => {\n    let elt = new HTMLLinkElement();\n    elt._ownerDocument = new Document();\n    expect(elt.nodeName, 'link');\n});\n\ntest('HTMLLinkElement rel process properly', () => {\n    let document = new Document();\n    document.head.innerHTML = '<link href=\"\" rel=\"stylesheet\"/>';\n    let elt = document.head.querySelector('link[rel=\"stylesheet\"]');\n    expect(elt.getAttribute('rel'), 'stylesheet');\n    expect(elt.rel, 'stylesheet');\n    elt.rel = 'value';\n    expect(elt.getAttribute('rel'), 'value');\n});\n\ntest('HTMLLinkElement setAttribute', () => {\n    let document = new Document();\n    document.location.href = 'https://github.com/';\n    let object = document.createElement('link');\n    object.setAttribute('href', '/some_relative_url');\n    expect(object.href, 'https://github.com/some_relative_url');\n    expect(object.getAttribute('href'), '/some_relative_url');\n});\n\ntest('HTMLLinkElement set disabled', () => {\n    let document = new Document();\n    let link = document.createElement('link');\n    link.disabled = true;\n    expect(link.outerHTML, '<link disabled>');\n});\n\ntest('HTMLLinkElement get disabled', () => {\n    let document = new Document();\n    document.head.innerHTML = '<link rel=\"some\" disabled><link rel=\"other\">';\n    expect(document.head.firstChild.disabled, true);\n    expect(document.head.lastChild.disabled, false);\n});\n\ntest('HTMLLinkElement set hreflang', () => {\n    let document = new Document();\n    let link = document.createElement('link');\n    link.hreflang = 'en';\n    expect(link.outerHTML, '<link hreflang=\"en\">');\n});\n\ntest('HTMLLinkElement get hreflang', () => {\n    let document = new Document();\n    document.head.innerHTML = '<link hreflang=\"some\">';\n    expect(document.head.lastChild.hreflang, 'some');\n});\n\ntest('HTMLLinkElement set media', () => {\n    let document = new Document();\n    let link = document.createElement('link');\n    link.media = 'print';\n    expect(link.outerHTML, '<link media=\"print\">');\n});\n\ntest('HTMLLinkElement get hreflang', () => {\n    let document = new Document();\n    document.head.innerHTML = '<link media=\"some\">';\n    expect(document.head.lastChild.media, 'some');\n});\n\ntest('HTMLLinkElement set type', () => {\n    let document = new Document();\n    let link = document.createElement('link');\n    link.type = 'print';\n    expect(link.outerHTML, '<link type=\"print\">');\n});\n\ntest('HTMLLinkElement get type', () => {\n    let document = new Document();\n    document.head.innerHTML = '<link type=\"some\">';\n    expect(document.head.lastChild.type, 'some');\n});\n"]}