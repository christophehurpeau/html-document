{"version":3,"sources":["../src/Document.js"],"names":["suite","test","document","textNode","createTextNode","textContent","h1","createElement","outerHTML","innerHTML","firstChild","nodeName","body","getElementById","setAttribute","appendChild","span","textNode1","textNode2","br1","br2","fragment","createDocumentFragment","html","head","documentElement","querySelector","element","getAttribute","elements","querySelectorAll","length","location","hostname","tagName","children"],"mappings":";;AAAA;;AACA;;AAEAA,MAAM,UAAN,EAAkB,MAAM;AACtBC,OAAK,oBAAL,EAA2B,MAAM;AAC/B,QAAIC,WAAW,gBAAf;AACA,QAAIC,WAAWD,SAASE,cAAT,CAAwB,OAAxB,CAAf;;AAEA,+BAAYD,SAASE,WAArB,EAAkC,OAAlC;AACD,GALD;;AAOAJ,OAAK,uBAAL,EAA8B,MAAM;AAClC,QAAIC,WAAW,gBAAf;AACA,QAAII,KAAKJ,SAASK,aAAT,CAAuB,IAAvB,CAAT;AACA,+BAAYD,GAAGE,SAAf,EAA0B,WAA1B;AACA,+BAAYF,GAAGG,SAAf,EAA0B,EAA1B;AACA,+BAAYH,GAAGD,WAAf,EAA4B,EAA5B;AACD,GAND;;AAQAJ,OAAK,wCAAL,EAA+C,MAAM;AACnD,QAAIC,WAAW,gBAAf;AACA,+BAAYA,SAASQ,UAAT,CAAoBC,QAAhC,EAA0C,MAA1C;AACD,GAHD;;AAKAV,OAAK,iCAAL,EAAwC,MAAM;AAC5C,QAAIC,WAAW,gBAAf;AACAA,aAASO,SAAT,GAAqB,eAArB;AACA,+BAAYP,SAASQ,UAAT,CAAoBC,QAAhC,EAA0C,MAA1C;AACD,GAJD;;AAMAV,OAAK,4DAAL,EAAmE,MAAM;AACvE,QAAIC,WAAW,gBAAf;AACAA,aAASO,SAAT,GAAqB,8CAArB;AACA,+BAAYP,SAASU,IAAT,CAAcH,SAA1B,EAAqC,OAArC;AACD,GAJD;;AAMAR,OAAK,0CAAL,EAAiD,MAAM;AACrD,QAAIC,WAAW,gBAAf;AACAA,aAASU,IAAT,CAAcH,SAAd,GAA0B,oCAA1B;AACA,+BAAYP,SAASW,cAAT,CAAwB,KAAxB,EAA+BJ,SAA3C,EAAsD,GAAtD;AACD,GAJD;;AAMAR,OAAK,oDAAL,EAA2D,MAAM;AAC/D,QAAIC,WAAW,gBAAf;AACAA,aAASU,IAAT,CAAcH,SAAd,GAA0B,oCAA1B;AACA,+BAAYP,SAASW,cAAT,CAAwB,MAAxB,CAAZ,EAA6C,IAA7C;AACD,GAJD;;AAMAZ,OAAK,6BAAL,EAAoC,MAAM;AACxC,QAAIC,WAAW,gBAAf;AACAA,aAASO,SAAT,GAAqB,uBAArB;AACA,+BAAYP,SAASQ,UAAT,CAAoBC,QAAhC,EAA0C,UAA1C;AACD,GAJD;;AAMAV,OAAK,wCAAL,EAA+C,MAAM;AACnD,QAAIC,WAAW,gBAAf;AACA,QAAIC,WAAWD,SAASE,cAAT,CAAwB,OAAxB,CAAf;AACA,QAAIE,KAAKJ,SAASK,aAAT,CAAuB,IAAvB,CAAT;AACAD,OAAGQ,YAAH,CAAgB,IAAhB,EAAsB,OAAtB;;AAEAR,OAAGS,WAAH,CAAeZ,QAAf;AACA,+BAAYG,GAAGE,SAAf,EAA0B,2BAA1B;AACA,+BAAYF,GAAGG,SAAf,EAA0B,OAA1B;AACA,+BAAYH,GAAGD,WAAf,EAA4B,OAA5B;;AAEA,QAAIW,OAAOd,SAASK,aAAT,CAAuB,MAAvB,CAAX;AACAD,OAAGS,WAAH,CAAeC,IAAf;AACA,+BAAYV,GAAGE,SAAf,EAA0B,wCAA1B;AACA,+BAAYF,GAAGG,SAAf,EAA0B,oBAA1B;AACA,+BAAYH,GAAGD,WAAf,EAA4B,OAA5B;AACD,GAhBD;;AAkBAJ,OAAK,iCAAL,EAAwC,MAAM;AAC5C,QAAIC,WAAW,gBAAf;AACA,QAAIc,OAAOd,SAASK,aAAT,CAAuB,MAAvB,CAAX;AACA,QAAIU,YAAYf,SAASE,cAAT,CAAwB,QAAxB,CAAhB;AACA,QAAIc,YAAYhB,SAASE,cAAT,CAAwB,QAAxB,CAAhB;AACA,QAAIe,MAAMjB,SAASK,aAAT,CAAuB,IAAvB,CAAV;AACA,QAAIa,MAAMlB,SAASK,aAAT,CAAuB,IAAvB,CAAV;AACAa,QAAIN,YAAJ,CAAiB,OAAjB,EAA0B,MAA1B;;AAEAE,SAAKD,WAAL,CAAiBE,SAAjB;AACAD,SAAKD,WAAL,CAAiBI,GAAjB;AACAH,SAAKD,WAAL,CAAiBK,GAAjB;AACAJ,SAAKD,WAAL,CAAiBG,SAAjB;AACA,+BAAYF,KAAKR,SAAjB,EAA6B,UAAQQ,KAAKP,SAAU,UAApD;AACA,+BAAYO,KAAKP,SAAjB,EAA4B,mCAA5B;AACD,GAfD;;AAiBAR,OAAK,sBAAL,EAA6B,MAAM;AACjC,QAAIC,WAAW,gBAAf;AACA,QAAImB,WAAWnB,SAASoB,sBAAT,EAAf;AACAD,aAASN,WAAT,CAAqB,eAArB;AACA,QAAIQ,OAAOrB,SAASK,aAAT,CAAuB,MAAvB,CAAX;AACAc,aAASN,WAAT,CAAqBQ,IAArB;AACA,QAAIC,OAAOtB,SAASK,aAAT,CAAuB,MAAvB,CAAX;AACAgB,SAAKR,WAAL,CAAiBS,IAAjB;AACA,QAAIZ,OAAOV,SAASK,aAAT,CAAuB,MAAvB,CAAX;AACAgB,SAAKR,WAAL,CAAiBH,IAAjB;AACA,+BAAYS,SAASZ,SAArB,EAAgC,wDAAhC;AACD,GAXD;;AAaAR,OAAK,kEAAL,EAAyE,MAAM;AAC7E,QAAIC,WAAW,gBAAf;AACAA,aAASuB,eAAT,CAAyBhB,SAAzB;AAEA,+BAAYP,SAASU,IAAT,CAAcP,WAA1B,EAAuC,OAAvC;AACA,+BAAYH,SAASsB,IAAT,CAAcE,aAAd,CAA4B,OAA5B,EAAqCrB,WAAjD,EAA8D,OAA9D;AACD,GAND;;AAQAJ,OAAK,wBAAL,EAA+B,MAAM;AACnC,QAAIC,WAAW,gBAAf;AACAA,aAASU,IAAT,CAAcH,SAAd,GAA0B,+EAA1B;AACA,QAAIkB,UAAUzB,SAASwB,aAAT,CAAuB,eAAvB,CAAd;AACA,+BAAYC,QAAQC,YAAR,CAAqB,MAArB,CAAZ,EAA0C,MAA1C;AACD,GALD;;AAOA3B,OAAK,4BAAL,EAAmC,MAAM;AACvC,QAAIC,WAAW,gBAAf;AACAA,aAASU,IAAT,CAAcH,SAAd,GAA0B,8EAA1B;AACA,QAAIoB,WAAW3B,SAAS4B,gBAAT,CAA0B,eAA1B,CAAf;AACA,+BAAYD,SAASE,MAArB,EAA6B,CAA7B;AACA,+BAAYF,SAAS,CAAT,EAAYxB,WAAxB,EAAqC,MAArC;AACA,+BAAYwB,SAAS,CAAT,EAAYD,YAAZ,CAAyB,MAAzB,CAAZ,EAA8C,MAA9C;AACD,GAPD;;AASA3B,OAAK,qBAAL,EAA4B,MAAM;AAChC,QAAIC,WAAW,gBAAf;AACAA,aAASU,IAAT,CAAcH,SAAd,GAA0B,8EAA1B;AACA,0BAAOP,SAASG,WAAhB;AACD,GAJD;;AAMAJ,OAAK,iCAAL,EAAwC,MAAM;AAC5C,QAAIC,WAAW,gBAAf;AACAA,aAAS8B,QAAT,GAAoB,sBAApB;AACA,+BAAY9B,SAAS8B,QAAT,CAAkBC,QAA9B,EAAwC,UAAxC;AACD,GAJD;;AAMAhC,OAAK,oCAAL,EAA2C,MAAM;AAC/C,QAAIC,WAAW,gBAAf;AACA,0BAAO,MAAMA,SAASsB,IAAT,GAAgB,KAA7B;AACD,GAHD;;AAKAvB,OAAK,qDAAL,EAA4D,MAAM;AAChE,QAAIC,WAAW,gBAAf;AACA,+BAAYA,SAASsB,IAAT,CAAcU,OAA1B,EAAmC,MAAnC;AACD,GAHD;;AAKAjC,OAAK,oDAAL,EAA2D,MAAM;AAC/D,QAAIC,WAAW,gBAAf;AACAA,aAASuB,eAAT,CAAyBhB,SAAzB,GAAqC,+CAArC;AACA,+BAAYP,SAASsB,IAAT,CAAcf,SAA1B,EAAqC,qBAArC;AACD,GAJD;;AAMAR,OAAK,oCAAL,EAA2C,MAAM;AAC/C,QAAIC,WAAW,gBAAf;AACAA,aAASU,IAAT,CAAcH,SAAd,GAA0B,aAA1B;AACA,+BAAYP,SAASU,IAAT,CAAcuB,QAAd,CAAuBJ,MAAnC,EAA2C,CAA3C;AACA7B,aAASU,IAAT,GAAgBV,SAASK,aAAT,CAAuB,MAAvB,CAAhB;AACA,+BAAYL,SAASU,IAAT,CAAcuB,QAAd,CAAuBJ,MAAnC,EAA2C,CAA3C;AACD,GAND;;AAQA9B,OAAK,qCAAL,EAA4C,MAAM;AAChD,QAAIC,WAAW,gBAAf;AACAA,aAASU,IAAT,GAAgBV,SAASK,aAAT,CAAuB,MAAvB,CAAhB;AACA,+BAAYL,SAASU,IAAT,CAAcuB,QAAd,CAAuBJ,MAAnC,EAA2C,CAA3C;AACD,GAJD;AAKD,CApKD","file":"Document.js","sourcesContent":["import { strictEqual, throws, isNull } from 'proclaim';\nimport { Document, Doctype } from '../../src';\n\nsuite('Document', () => {\n  test('create a Text Node', () => {\n    let document = new Document();\n    let textNode = document.createTextNode('Hello');\n\n    strictEqual(textNode.textContent, 'Hello');\n  });\n\n  test('create an HTMLElement', () => {\n    let document = new Document();\n    let h1 = document.createElement('h1');\n    strictEqual(h1.outerHTML, '<h1></h1>');\n    strictEqual(h1.innerHTML, '');\n    strictEqual(h1.textContent, '');\n  });\n\n  test('first child for empty document is html', () => {\n    let document = new Document();\n    strictEqual(document.firstChild.nodeName, 'html');\n  });\n\n  test('first child is which one is set', () => {\n    let document = new Document();\n    document.innerHTML = '<some></some>';\n    strictEqual(document.firstChild.nodeName, 'some');\n  });\n\n  test('append child should replace body and head if child is html', () => {\n    let document = new Document();\n    document.innerHTML = '<html><head></head><body>Hello</body></html>';\n    strictEqual(document.body.innerHTML, 'Hello');\n  });\n\n  test('getElementById should return one element', () => {\n    let document = new Document();\n    document.body.innerHTML = '<b id=\"fat\">1</b><b id=\"fat\">2</b>';\n    strictEqual(document.getElementById('fat').innerHTML, '1');\n  });\n\n  test('getElementById should return null if nothing found', () => {\n    let document = new Document();\n    document.body.innerHTML = '<b id=\"fat\">1</b><b id=\"fat\">2</b>';\n    strictEqual(document.getElementById('thin'), null);\n  });\n\n  test('create comments in document', () => {\n    let document = new Document();\n    document.innerHTML = '<!-- some comment -->';\n    strictEqual(document.firstChild.nodeName, '#comment');\n  });\n\n  test('create an element and add nodes inside', () => {\n    let document = new Document();\n    let textNode = document.createTextNode('Hello');\n    let h1 = document.createElement('h1');\n    h1.setAttribute('id', 'title');\n\n    h1.appendChild(textNode);\n    strictEqual(h1.outerHTML, '<h1 id=\"title\">Hello</h1>');\n    strictEqual(h1.innerHTML, 'Hello');\n    strictEqual(h1.textContent, 'Hello');\n\n    let span = document.createElement('span');\n    h1.appendChild(span);\n    strictEqual(h1.outerHTML, '<h1 id=\"title\">Hello<span></span></h1>');\n    strictEqual(h1.innerHTML, 'Hello<span></span>');\n    strictEqual(h1.textContent, 'Hello');\n  });\n\n  test('create elements without content', () => {\n    let document = new Document();\n    let span = document.createElement('span');\n    let textNode1 = document.createTextNode('Hello1');\n    let textNode2 = document.createTextNode('Hello2');\n    let br1 = document.createElement('br');\n    let br2 = document.createElement('br');\n    br2.setAttribute('class', 'test');\n\n    span.appendChild(textNode1);\n    span.appendChild(br1);\n    span.appendChild(br2);\n    span.appendChild(textNode2);\n    strictEqual(span.outerHTML, `<span>${span.innerHTML}</span>`);\n    strictEqual(span.innerHTML, 'Hello1<br><br class=\"test\">Hello2');\n  });\n\n  test('create a html layout', () => {\n    let document = new Document();\n    let fragment = document.createDocumentFragment();\n    fragment.appendChild(new Doctype());\n    let html = document.createElement('html');\n    fragment.appendChild(html);\n    let head = document.createElement('head');\n    html.appendChild(head);\n    let body = document.createElement('body');\n    html.appendChild(body);\n    strictEqual(fragment.innerHTML, '<!DOCTYPE html><html><head></head><body></body></html>');\n  });\n\n  test('Set documentElement content changes document.body, document.head', () => {\n    let document = new Document();\n    document.documentElement.innerHTML = '<!DOCTYPE html><html><head><title>Hello</title>' +\n                                         '</head><body>World</body></html>';\n    strictEqual(document.body.textContent, 'World');\n    strictEqual(document.head.querySelector('title').textContent, 'Hello');\n  });\n\n  test('process query selector', () => {\n    let document = new Document();\n    document.body.innerHTML = '<div><span class=\"second\">Text</span></div><i>Skip me</i><input type=\"text\"/>';\n    let element = document.querySelector('.first, input');\n    strictEqual(element.getAttribute('type'), 'text');\n  });\n\n  test('process query selector all', () => {\n    let document = new Document();\n    document.body.innerHTML = '<div><span class=\"first\">Text</span></div><i>Skip me</i><input type=\"text\"/>';\n    let elements = document.querySelectorAll('.first, input');\n    strictEqual(elements.length, 2);\n    strictEqual(elements[0].textContent, 'Text');\n    strictEqual(elements[1].getAttribute('type'), 'text');\n  });\n\n  test('process textContent', () => {\n    let document = new Document();\n    document.body.innerHTML = '<div><span class=\"first\">Text</span></div><i>Skip me</i><input type=\"text\"/>';\n    isNull(document.textContent);\n  });\n\n  test('Check document.location process', () => {\n    let document = new Document();\n    document.location = 'http://some.url/page';\n    strictEqual(document.location.hostname, 'some.url');\n  });\n\n  test('setting document.head should throw', () => {\n    let document = new Document();\n    throws(() => document.head = '123');\n  });\n\n  test('getting empty document.head should return empty tag', () => {\n    let document = new Document();\n    strictEqual(document.head.tagName, 'head');\n  });\n\n  test('getting head of normal document should return data', () => {\n    let document = new Document();\n    document.documentElement.innerHTML = '<html><head><title>Some</title></head></html>';\n    strictEqual(document.head.innerHTML, '<title>Some</title>');\n  });\n\n  test('setting document.body replace body', () => {\n    let document = new Document();\n    document.body.innerHTML = '<div></div>';\n    strictEqual(document.body.children.length, 1);\n    document.body = document.createElement('body');\n    strictEqual(document.body.children.length, 0);\n  });\n\n  test('setting document.body adds new body', () => {\n    let document = new Document();\n    document.body = document.createElement('body');\n    strictEqual(document.body.children.length, 0);\n  });\n});\n"]}