{"version":3,"sources":["../../src/utils/Url.js"],"names":["Url","suite","test","url","toString","href","protocol","host","port","auth","hostname","pathname","search","hash","username","password","searchParams"],"mappings":"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","file":"Url.js","sourcesContent":["import { equal, strictEqual, deepEqual } from 'proclaim';\nimport { utils } from '../../../src';\n\nconst Url = utils.Url;\n\nsuite('Url', () => {\n  test('Url constructor processing', () => {\n    let url = new Url();\n    equal(url.toString(), 'about:blank');\n\n    url = new Url('http://some.link');\n    equal(url.toString(), 'http://some.link/');\n  });\n\n  test('Url toString', () => {\n    let url = new Url('http://some.link');\n    equal(url, 'http://some.link/');\n  });\n\n  test('href member', () => {\n    let url = new Url('http://some.link');\n    strictEqual(url.href, 'http://some.link/');\n\n    url.href = 'ftp://test:test@other:8080';\n    strictEqual(url.href, 'ftp://test:test@other:8080/');\n\n    url.href = '';\n    strictEqual(url.href, 'about:blank');\n  });\n\n  test('protocol member', () => {\n    let url = new Url('http://some.link');\n    strictEqual(url.protocol, 'http:');\n\n    url.protocol = 'some:';\n    strictEqual(url.protocol, 'some:');\n\n    url.protocol = 'ftp';\n    strictEqual(url.protocol, 'ftp:');\n  });\n\n  test('host member', () => {\n    let url = new Url('http://some.link');\n    strictEqual(url.host, 'some.link');\n\n    url.href = 'ftp://test:test@other:8080';\n    strictEqual(url.host, 'other:8080');\n\n    url.host = 'my.url:8080';\n    strictEqual(url.host, 'my.url:8080');\n\n    url.host = 'other.url';\n    url.port = '90';\n    strictEqual(url.host, 'other.url:90');\n  });\n\n  test('auth member', () => {\n    let url = new Url('http://some.link');\n    strictEqual(url.auth, '');\n\n    url.auth = 'my:name';\n    strictEqual(url.auth, 'my:name');\n\n    url.href = 'http://other:name@link.com';\n    strictEqual(url.auth, 'other:name');\n\n    url.href = 'http://username@link.com';\n    strictEqual(url.auth, 'username');\n  });\n\n  test('hostname member', () => {\n    let url = new Url('http://some.link');\n    strictEqual(url.hostname, 'some.link');\n\n    url.href = 'ftp://test:test@other:8080';\n    strictEqual(url.hostname, 'other');\n\n    url.hostname = 'my.url';\n    strictEqual(url.hostname, 'my.url');\n\n    url.host = 'other.url';\n    url.port = '90';\n    strictEqual(url.hostname, 'other.url');\n  });\n\n  test('port member', () => {\n    let url = new Url('http://some.link');\n    strictEqual(url.port, '80');\n\n    url.href = 'ftp://test:test@other';\n    strictEqual(url.port, '21');\n\n    url.host = 'my.url:8080';\n    strictEqual(url.port, '8080');\n\n    url.host = 'other.url';\n    url.port = '90';\n    strictEqual(url.host, 'other.url:90');\n    strictEqual(url.href, 'ftp://test:test@other.url:90/');\n\n    url.port = 'some other value';\n    strictEqual(url.href, 'ftp://test:test@other.url/');\n\n    url = new Url('https://secure.link');\n    strictEqual(url.port, '443');\n\n    url = new Url('mongo://mongo.link');\n    strictEqual(url.port, '');\n  });\n\n  test('pathname member', () => {\n    let url = new Url('http://some.link');\n    strictEqual(url.pathname, '/');\n\n    url.pathname = '/some/path/on/site.html';\n    strictEqual(url.pathname, '/some/path/on/site.html');\n    strictEqual(url.href, 'http://some.link/some/path/on/site.html');\n  });\n\n  test('search member', () => {\n    let url = new Url('http://some.link');\n    strictEqual(url.search, '');\n\n    url.href = 'http://some.link/some/path/on/site.html?search=me';\n    strictEqual(url.search, '?search=me');\n\n    url.search = 'myparams for search';\n    strictEqual(url.href, 'http://some.link/some/path/on/site.html?myparams for search');\n  });\n\n  test('hash member', () => {\n    let url = new Url('http://some.link');\n    strictEqual(url.hash, '#');\n\n    url.hash = '#hash';\n    strictEqual(url.hash, '#hash');\n\n    url.hash = 'some_hash';\n    strictEqual(url.hash, '#some_hash');\n    strictEqual(url.href, 'http://some.link/#some_hash');\n  });\n\n  test('username member', () => {\n    let url = new Url('http://some.link');\n    strictEqual(url.username, '');\n\n    url.username = 'user';\n    strictEqual(url.auth, 'user');\n\n    url.auth = 'my:name';\n    strictEqual(url.username, 'my');\n\n    url.href = 'http://other:name@link.com';\n    strictEqual(url.username, 'other');\n\n    url.href = 'http://username@link.com';\n    strictEqual(url.username, 'username');\n\n    url.href = 'http://:username@link.com';\n    strictEqual(url.username, '');\n\n    url.username = 'me';\n    strictEqual(url.auth, 'me:username');\n  });\n\n  test('password member', () => {\n    let url = new Url('http://some.link');\n    strictEqual(url.password, '');\n\n    url.password = 'pass';\n    strictEqual(url.auth, ':pass');\n\n    url.auth = 'my:name';\n    strictEqual(url.password, 'name');\n\n    url.href = 'http://other:name@link.com';\n    strictEqual(url.password, 'name');\n\n    url.href = 'http://username@link.com';\n    strictEqual(url.password, '');\n\n    url.password = 'password';\n    strictEqual(url.auth, 'username:password');\n\n    url.href = 'http://:username@link.com';\n    strictEqual(url.password, 'username');\n  });\n\n  test('searchParams member', () => {\n    let url = new Url('http://some.link');\n    deepEqual(url.searchParams, {});\n\n    url.href = 'http://some.link/some/path/on/site.html?search=me';\n    strictEqual(url.searchParams.search, 'me');\n  });\n});\n"]}