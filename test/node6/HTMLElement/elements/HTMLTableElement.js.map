{"version":3,"sources":["../../../src/HTMLElement/elements/HTMLTableElement.js"],"names":["suite","test","elt","_ownerDocument","nodeName","caption","createCaption","deleteCaption","tHead","head","createTHead","deleteTHead","tFoot","createTFoot","deleteTFoot","rows","length","row","insertRow","tBodies","document","div","createElement","innerHTML","table","querySelector","tagName","thead","cell","insertCell","outerHTML","span","body","firstChild"],"mappings":";;AAAA;;AACA;;AAEAA,MAAM,kBAAN,EAA0B,MAAM;AAC9BC,OAAK,oCAAL,EAA2C,MAAM;AAC/C,QAAIC,MAAM,wBAAV;AACAA,QAAIC,cAAJ,GAAqB,gBAArB;AACA,+BAAYD,IAAIE,QAAhB,EAA0B,OAA1B;AACD,GAJD;;AAMAH,OAAK,kBAAL,EAAyB,MAAM;AAC7B,QAAIC,MAAM,wBAAV;AACAA,QAAIC,cAAJ,GAAqB,gBAArB;AACA,0BAAOD,IAAIG,OAAX;AACA,QAAIA,UAAUH,IAAII,aAAJ,EAAd;AACA,+BAAYJ,IAAIG,OAAhB,EAAyBA,OAAzB;AACAH,QAAIK,aAAJ;AACA,0BAAOL,IAAIG,OAAX;AACD,GARD;;AAUAJ,OAAK,gBAAL,EAAuB,MAAM;AAC3B,QAAIC,MAAM,wBAAV;AACAA,QAAIC,cAAJ,GAAqB,gBAArB;AACA,0BAAOD,IAAIM,KAAX;AACA,QAAIC,OAAOP,IAAIQ,WAAJ,EAAX;AACA,+BAAYR,IAAIM,KAAhB,EAAuBC,IAAvB;AACAP,QAAIS,WAAJ;AACA,0BAAOT,IAAIM,KAAX;AACD,GARD;;AAUAP,OAAK,gBAAL,EAAuB,MAAM;AAC3B,QAAIC,MAAM,wBAAV;AACAA,QAAIC,cAAJ,GAAqB,gBAArB;AACA,0BAAOD,IAAIU,KAAX;AACA,QAAIH,OAAOP,IAAIW,WAAJ,EAAX;AACA,+BAAYX,IAAIU,KAAhB,EAAuBH,IAAvB;AACAP,QAAIY,WAAJ;AACA,0BAAOZ,IAAIU,KAAX;AACD,GARD;;AAUAX,OAAK,eAAL,EAAsB,MAAM;AAC1B,QAAIC,MAAM,wBAAV;AACAA,QAAIC,cAAJ,GAAqB,gBAArB;AACA,+BAAYD,IAAIa,IAAJ,CAASC,MAArB,EAA6B,CAA7B;AACA,QAAIC,MAAMf,IAAIgB,SAAJ,EAAV;AACA,+BAAYhB,IAAIa,IAAJ,CAASC,MAArB,EAA6B,CAA7B;AACA,+BAAYd,IAAIiB,OAAJ,CAAYH,MAAxB,EAAgC,CAAhC;AACA,+BAAYd,IAAIa,IAAJ,CAAS,CAAT,CAAZ,EAAyBE,GAAzB;AACD,GARD;;AAUAhB,OAAK,mBAAL,EAA0B,MAAM;AAC9B,UAAMmB,WAAW,gBAAjB;AACA,QAAIC,MAAMD,SAASE,aAAT,CAAuB,KAAvB,CAAV;AACAD,QAAIE,SAAJ,GAAgB,6CAAhB;AACA,QAAIC,QAAQH,IAAII,aAAJ,CAAkB,OAAlB,CAAZ;AACA,+BAAYD,MAAME,OAAlB,EAA2B,OAA3B;AACA,+BAAYF,MAAMT,IAAN,CAAWC,MAAvB,EAA+B,CAA/B;AACA,+BAAYQ,MAAML,OAAN,CAAcH,MAA1B,EAAkC,CAAlC;AACA,0BAAOQ,MAAMnB,OAAb;AACD,GATD;;AAWAJ,OAAK,oBAAL,EAA2B,MAAM;AAC/B,UAAMmB,WAAW,gBAAjB;AACA,QAAII,QAAQJ,SAASE,aAAT,CAAuB,OAAvB,CAAZ;AACA,QAAIjB,UAAUmB,MAAMlB,aAAN,EAAd;AACAD,YAAQkB,SAAR,GAAoB,MAApB;AACA,QAAII,QAAQH,MAAMd,WAAN,EAAZ;AACA,QAAIO,MAAMU,MAAMT,SAAN,EAAV;AACA,QAAIU,OAAOX,IAAIY,UAAJ,EAAX;AACAD,SAAKL,SAAL,GAAiB,WAAjB;AACA,+BAAYC,MAAMM,SAAlB,EAA6B,kFAA7B;AACD,GAVD;;AAYA7B,OAAK,6CAAL,EAAoD,MAAM;AACxD,UAAMmB,WAAW,gBAAjB;AACA,QAAII,QAAQJ,SAASE,aAAT,CAAuB,OAAvB,CAAZ;AACA,QAAIK,QAAQH,MAAMd,WAAN,EAAZ;AACA,QAAIO,MAAMU,MAAMT,SAAN,EAAV;AACA,QAAIU,OAAOX,IAAIY,UAAJ,EAAX;AACAD,SAAKL,SAAL,GAAiB,WAAjB;AACA,QAAIlB,UAAUmB,MAAMlB,aAAN,EAAd;AACAD,YAAQkB,SAAR,GAAoB,MAApB;AACA,+BAAYC,MAAMM,SAAlB,EAA6B,kFAA7B;AACD,GAVD;;AAYA7B,OAAK,kCAAL,EAAyC,MAAM;AAC7C,QAAImB,WAAW,gBAAf;AACA,QAAIlB,MAAM,wBAAV;AACAA,QAAIC,cAAJ,GAAqBiB,QAArB;AACA,QAAIW,OAAOX,SAASE,aAAT,CAAuB,MAAvB,CAAX;AACA,0BAAO,MAAMpB,IAAIG,OAAJ,GAAc0B,IAA3B;AACD,GAND;;AAQA9B,OAAK,WAAL,EAAkB,MAAM;AACtB,QAAImB,WAAW,gBAAf;AACAA,aAASY,IAAT,CAAcT,SAAd;AAEA,QAAIC,QAAQJ,SAASY,IAAT,CAAcC,UAA1B;AACAT,UAAMhB,KAAN,GAAcY,SAASE,aAAT,CAAuB,OAAvB,CAAd;AACA,+BAAYE,MAAMM,SAAlB;AAED,GARD;AASD,CAnGD","file":"HTMLTableElement.js","sourcesContent":["import { strictEqual, isNull, throws } from 'proclaim';\nimport { Document, HTMLTableElement, DOMException } from '../../../../src';\n\nsuite('HTMLTableElement', () => {\n  test('should have the nodeName == table ', () => {\n    let elt = new HTMLTableElement();\n    elt._ownerDocument = new Document();\n    strictEqual(elt.nodeName, 'table');\n  });\n\n  test('caption property', () => {\n    let elt = new HTMLTableElement();\n    elt._ownerDocument = new Document();\n    isNull(elt.caption);\n    let caption = elt.createCaption();\n    strictEqual(elt.caption, caption);\n    elt.deleteCaption();\n    isNull(elt.caption);\n  });\n\n  test('tHead property', () => {\n    let elt = new HTMLTableElement();\n    elt._ownerDocument = new Document();\n    isNull(elt.tHead);\n    let head = elt.createTHead();\n    strictEqual(elt.tHead, head);\n    elt.deleteTHead();\n    isNull(elt.tHead);\n  });\n\n  test('tFoot property', () => {\n    let elt = new HTMLTableElement();\n    elt._ownerDocument = new Document();\n    isNull(elt.tFoot);\n    let head = elt.createTFoot();\n    strictEqual(elt.tFoot, head);\n    elt.deleteTFoot();\n    isNull(elt.tFoot);\n  });\n\n  test('rows property', () => {\n    let elt = new HTMLTableElement();\n    elt._ownerDocument = new Document();\n    strictEqual(elt.rows.length, 0);\n    let row = elt.insertRow();\n    strictEqual(elt.rows.length, 1);\n    strictEqual(elt.tBodies.length, 1);\n    strictEqual(elt.rows[0], row);\n  });\n\n  test('import HTML table', () => {\n    const document = new Document();\n    let div = document.createElement('div');\n    div.innerHTML = '<table><tr><td>Some value</td></tr></table>';\n    let table = div.querySelector('table');\n    strictEqual(table.tagName, 'table');\n    strictEqual(table.rows.length, 1);\n    strictEqual(table.tBodies.length, 1);\n    isNull(table.caption);\n  });\n\n  test('outerHTML property', () => {\n    const document = new Document();\n    let table = document.createElement('table');\n    let caption = table.createCaption();\n    caption.innerHTML = 'Test';\n    let thead = table.createTHead();\n    let row = thead.insertRow();\n    let cell = row.insertCell();\n    cell.innerHTML = 'Head cell';\n    strictEqual(table.outerHTML, '<table><caption>Test</caption><thead><tr><td>Head cell</td></tr></thead></table>');\n  });\n\n  test('outerHTML property and right caption create', () => {\n    const document = new Document();\n    let table = document.createElement('table');\n    let thead = table.createTHead();\n    let row = thead.insertRow();\n    let cell = row.insertCell();\n    cell.innerHTML = 'Head cell';\n    let caption = table.createCaption();\n    caption.innerHTML = 'Test';\n    strictEqual(table.outerHTML, '<table><caption>Test</caption><thead><tr><td>Head cell</td></tr></thead></table>');\n  });\n\n  test('throw when setting wrong caption', () => {\n    let document = new Document();\n    let elt = new HTMLTableElement();\n    elt._ownerDocument = document;\n    let span = document.createElement('span');\n    throws(() => elt.caption = span, DOMException);\n  });\n\n  test('set tHead', () => {\n    let document = new Document();\n    document.body.innerHTML = '<table><caption>Some caption</caption><tbody>' +\n                              '<tr><td>Some cell</td></tr></tbody></table>';\n    let table = document.body.firstChild;\n    table.tHead = document.createElement('thead');\n    strictEqual(table.outerHTML, '<table><caption>Some caption</caption><thead></thead>' +\n                                 '<tbody><tr><td>Some cell</td></tr></tbody></table>');\n  });\n});\n"]}