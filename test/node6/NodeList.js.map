{"version":3,"sources":["../src/NodeList.js"],"names":["suite","test","document","div","createElement","nodeList","length","_push","undefined","item","div1","div2","index"],"mappings":";;AAAA;;AACA;;AAEAA,MAAM,UAAN,EAAkB,MAAM;AACtBC,OAAK,gBAAL,EAAuB,MAAM;AAC3B,UAAMC,WAAW,gBAAjB;AACA,UAAMC,MAAMD,SAASE,aAAT,CAAuB,KAAvB,CAAZ;;AAEA,UAAMC,WAAW,gBAAjB;;AAEA,+BAAYA,SAASC,MAArB,EAA6B,CAA7B;AACAD,aAASE,KAAT,CAAeJ,GAAf;AACA,+BAAYE,SAASC,MAArB,EAA6B,CAA7B;;AAEA,+BAAYD,SAAS,CAAT,CAAZ,EAAyBF,GAAzB;AACA,+BAAYE,SAAS,CAAT,CAAZ,EAAyBG,SAAzB;;AAEA,+BAAYH,SAASI,IAAT,CAAc,CAAd,CAAZ,EAA8BN,GAA9B;AACA,+BAAYE,SAASI,IAAT,CAAc,CAAd,CAAZ,EAA8B,IAA9B;AACD,GAfD;;AAiBAR,OAAK,mBAAL,EAA0B,MAAM;AAC9B,UAAMC,WAAW,gBAAjB;AACA,UAAMQ,OAAOR,SAASE,aAAT,CAAuB,KAAvB,CAAb;AACA,UAAMO,OAAOT,SAASE,aAAT,CAAuB,KAAvB,CAAb;;AAEA,UAAMC,WAAW,gBAAjB;;AAEAA,aAASE,KAAT,CAAeG,IAAf;AACAL,aAASE,KAAT,CAAeI,IAAf;;AAEA,+BAAYN,SAAS,CAAT,CAAZ,EAAyBK,IAAzB;AACA,+BAAYL,SAAS,CAAT,CAAZ,EAAyBM,IAAzB;;AAEA,QAAIC,QAAQ,CAAZ;AACA,SAAK,IAAIH,IAAT,IAAiBJ,QAAjB,EAA2B;AACzB,UAAIO,YAAY,CAAhB,EAAmB;AACjB,mCAAYH,IAAZ,EAAkBC,IAAlB;AACD,OAFD,MAEO;AACL,mCAAYD,IAAZ,EAAkBE,IAAlB;AACD;AACF;;AAED,+BAAYC,KAAZ,EAAmB,CAAnB;AACD,GAvBD;AAwBD,CA1CD","file":"NodeList.js","sourcesContent":["import { strictEqual } from 'proclaim';\nimport { Document, NodeList } from '../../src';\n\nsuite('NodeList', () => {\n  test('NodeList items', () => {\n    const document = new Document();\n    const div = document.createElement('div');\n\n    const nodeList = new NodeList();\n\n    strictEqual(nodeList.length, 0);\n    nodeList._push(div);\n    strictEqual(nodeList.length, 1);\n\n    strictEqual(nodeList[0], div);\n    strictEqual(nodeList[1], undefined);\n\n    strictEqual(nodeList.item(0), div);\n    strictEqual(nodeList.item(1), null);\n  });\n\n  test('NodeList iterator', () => {\n    const document = new Document();\n    const div1 = document.createElement('div');\n    const div2 = document.createElement('div');\n\n    const nodeList = new NodeList();\n\n    nodeList._push(div1);\n    nodeList._push(div2);\n\n    strictEqual(nodeList[0], div1);\n    strictEqual(nodeList[1], div2);\n\n    let index = 0;\n    for (let item of nodeList) {\n      if (index++ === 0) {\n        strictEqual(item, div1);\n      } else {\n        strictEqual(item, div2);\n      }\n    }\n\n    strictEqual(index, 2);\n  });\n});\n"]}