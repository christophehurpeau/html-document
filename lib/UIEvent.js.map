{"version":3,"sources":["../src/UIEvent.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;sBAAkB,SAAS;;;;sBACR,QAAQ;;;;;;;;;;;;;IAQN,OAAO;cAAP,OAAO;;;;;;;;;;;;;;;;AAcb,aAdM,OAAO,CAcZ,IAAI,EAAE,WAAW,EAAE;8BAdd,OAAO;;AAepB,mBAAW,GAAG,yBAAO,IAAI,EAAE;AACvB,kBAAM,EAAE,CAAC;AACT,gBAAI,EAAE,MAAM;SACf,EAAE,WAAW,CAAC,CAAC;;AAEhB,mCApBa,OAAO,6CAoBd,IAAI,EAAE,WAAW,EAAE;;AAEzB,YAAI,CAAC,OAAO,GAAG,WAAW,CAAC,MAAM,CAAC;AAClC,YAAI,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC;KACjC;;;;;;;;;;;;;;iBAxBgB,OAAO;;aAkCd,eAAG;AACT,mBAAO,IAAI,CAAC,OAAO,CAAC;SACvB;;;;;;;;;;;;;aAQO,eAAG;AACP,mBAAO,IAAI,CAAC,KAAK,CAAC;SACrB;;;WA9CgB,OAAO;;;qBAAP,OAAO","file":"UIEvent.js","sourcesContent":["import Event from './Event';\nimport extend from 'extend';\n\n/**\n * The UIEvent interface represents simple user interface events.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/UIEvent\n */\n\nexport default class UIEvent extends Event {\n    /**\n     * The UIEvent() constructor creates a new UIEvent.\n     *\n     * @param {string} type - Is a DOMString representing the name of the event.\n     * @param {Object} UIEventInit - Is a UIEventInit dictionary, having the following fields:\n     *                              \"detail\", optional and defaulting to 0, of type long, that is a event-dependant\n     *                              value associated with the event. UIEvent.detail lists the semantic for standard\n     *                              events.\n     *                              \"view\", optional and defaulting to null, of type WindowProxy, that is the Window\n     *                              associated with the event.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/UIEvent\n     */\n    constructor(type, UIEventInit) {\n        UIEventInit = extend(true, {\n            detail: 0,\n            view: global,\n        }, UIEventInit);\n\n        super(type, UIEventInit);\n\n        this._detail = UIEventInit.detail;\n        this._view = UIEventInit.view;\n    }\n\n    /**\n     * The UIEvent.detail read-only property, when non-zero, provides the current (or next, depending on the event)\n     * click count.\n     *\n     * @type {number}\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/detail\n     */\n    get detail() {\n        return this._detail;\n    }\n\n    /**\n     * The UIEvent.view read-only property returns the WindowProxy object from which the event was generated.\n     * In browsers, this is the Window object the event happened in.\n     *\n     * @type {Object}\n     */\n    get view() {\n        return this._view;\n    }\n}\n"]}