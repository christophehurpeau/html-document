{"version":3,"sources":["../../src/utils/DocumentElementHelper.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;4BAAwB,gBAAgB;;;;;;;;;;IAOnB,qBAAqB;YAArB,qBAAqB;;WAArB,qBAAqB;0BAArB,qBAAqB;;+BAArB,qBAAqB;;;;;;;eAArB,qBAAqB;;;;;;;;;;;SAMzB,aAAC,KAAK,EAAE;AACjB,iCAPa,qBAAqB,0BAOhB,KAAK,QAAC;AACxB,UAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAA,KAAK;eAAI,KAAK,CAAC,OAAO,KAAK,MAAM;OAAA,CAAC,CAAC;AAC3F,UAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAA,KAAK;eAAI,KAAK,CAAC,OAAO,KAAK,MAAM;OAAA,CAAC,CAAC;KAC9F;;;SAVgB,qBAAqB;;;qBAArB,qBAAqB;AAgB1C,MAAM,CAAC,cAAc,CAAC,qBAAqB,CAAC,SAAS,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC","file":"DocumentElementHelper.js","sourcesContent":["import HTMLElement from '../HTMLElement';\n\n/**\n * Class provide processing for innerHTML function for Document.documentElement\n * element. When this element property innerHTML changes, it also updates links\n * for head, body elements in document.\n */\nexport default class DocumentElementHelper extends HTMLElement {\n    /**\n     * Sets inner HTML for element.\n     *\n     * @param {string} value\n     */\n    set innerHTML(value) {\n        super.innerHTML = value;\n        this.ownerDocument.head = this._childNodesRecursiveFind(child => child.tagName === 'head');\n        this.ownerDocument.body = this._childNodesRecursiveFind(child => child.tagName === 'body');\n    }\n}\n\n/**\n * @constant {string} DocumentElementHelper#nodeName html\n */\nObject.defineProperty(DocumentElementHelper.prototype, 'nodeName', { value: 'html' });\n"]}