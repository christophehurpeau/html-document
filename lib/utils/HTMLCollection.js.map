{"version":3,"sources":["../../src/utils/HTMLCollection.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;IAKqB,cAAc;cAAd,cAAc;;AACpB,aADM,cAAc,CACnB,MAAM,EAAE,QAAQ,EAAE;8BADb,cAAc;;AAE3B,mCAFa,cAAc,6CAEnB;AACR,YAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AACtB,YAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC1B,YAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACpC;;iBANgB,cAAc;;;;;iCAQlB,uBAAC,MAAM,EAAE;;;AAClB,kBAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;AAC7B,oBAAI,MAAK,SAAS,CAAC,KAAK,CAAC,EAAE;AACvB,0BAAK,IAAI,CAAC,KAAK,CAAC,CAAC;iBACpB;;AAED,oBAAI,KAAK,CAAC,iBAAiB,GAAG,CAAC,EAAE;AAC7B,0BAAK,aAAa,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACJ,CAAC,CAAC;SACN;;;;;;;;;;;;eAOM,mBAAG;AACN,gBAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5B,gBAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACpC;;;;;;;;;;;;;;;eASG,cAAC,KAAK,EAAE;AACR,gBAAI,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE;AACnC,uBAAO,IAAI,CAAC,KAAK,CAAC,CAAC;aACtB;;AAED,mBAAO,IAAI,CAAC;SACf;;;WA3CgB,cAAc;GAAS,KAAK;;qBAA5B,cAAc","file":"HTMLCollection.js","sourcesContent":["/**\n * Class provides interface for HTLMCollection. Used in getElementsByTagName etc.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLCollection\n */\nexport default class HTMLCollection extends Array {\n    constructor(parent, selector) {\n        super();\n        this._parent = parent;\n        this._selector = selector;\n        this._fillChildren(this._parent);\n    }\n\n    _fillChildren(parent) {\n        parent.children.forEach(child => {\n            if (this._selector(child)) {\n                this.push(child);\n            }\n\n            if (child.childElementCount > 0) {\n                this._fillChildren(child);\n            }\n        });\n    }\n\n    /**\n     * Method updates state of collection\n     *\n     * @private\n     */\n    _update() {\n        this.splice(0, this.length);\n        this._fillChildren(this._parent);\n    }\n\n    /**\n     * Returns the specific node at the given zero-based index into the list. Returns null if the index\n     * is out of range.\n     *\n     * @param {number} index\n     * @returns {HTMLElement|null}\n     */\n    item(index) {\n        if (index >= 0 && index < this.length) {\n            return this[index];\n        }\n\n        return null;\n    }\n}\n"]}