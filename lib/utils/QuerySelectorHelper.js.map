{"version":3,"sources":["../../src/utils/QuerySelectorHelper.js"],"names":[],"mappings":";;;;;;;;;;iCAAgC,qBAAqB;;;;;;;;;IAM/C,mBAAmB;AACV,aADT,mBAAmB,CACT,OAAO,EAAE;8BADnB,mBAAmB;;AAEjB,YAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,YAAI,CAAC,MAAM,GAAG,IAAI,CAAC;KACtB;;iBAJC,mBAAmB;;;;;gCAMhB,eAAC,KAAK,EAAE;AACT,gBAAI,MAAM,GAAG,mBAAmB,CAAC,iBAAiB,CAAC;AACnD,gBAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAChC,gBAAI,CAAC,MAAM,GAAG,IAAI,CAAC;;AAEnB,gBAAI,KAAK,CAAC,IAAI,KAAK,WAAW,EAAE;AAC5B,oBAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;aACxD,MAAM,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EAAE;AACjC,oBAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;aAC9C;;AAED,mBAAO,IAAI,CAAC,MAAM,CAAC;SACtB;;;;;;gCAEO,kBAAC,KAAK,EAAE;AACZ,gBAAI,MAAM,GAAG,mBAAmB,CAAC,iBAAiB,CAAC;AACnD,gBAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAChC,gBAAI,CAAC,MAAM,GAAG,EAAE,CAAC;;AAEjB,gBAAI,KAAK,CAAC,IAAI,KAAK,WAAW,EAAE;AAC5B,oBAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;aACxD,MAAM,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EAAE;AACjC,oBAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;aAC9C;;AAED,mBAAO,IAAI,CAAC,MAAM,CAAC;SACtB;;;;;;;;;;;;;;;;eAiBe,0BAAC,OAAO,EAAE,SAAS,EAAE;;;AACjC,mBAAO,SAAS,CAAC,KAAK,CAAC,UAAC,QAAQ,EAAK;AACjC,uBAAO,MAAK,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;aACnD,EAAE,IAAI,CAAC,CAAC;SACZ;;;;;;;;;;;;;;;;eASU,qBAAC,OAAO,EAAE,IAAI,EAAE;;;AACvB,mBAAO,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAC,KAAK,EAAK;AACrC,uBAAO,OAAK,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;aAC3C,EAAE,IAAI,CAAC,CAAC;SACZ;;;;;;;;;;;;;;;;eASa,wBAAC,OAAO,EAAE,IAAI,EAAE;AAC1B,gBAAI,KAAK,GAAG,IAAI,CAAC;;AAEjB,gBAAI,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;AACzC,qBAAK,IAAI,OAAO,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO,CAAC;aAC7C;;AAED,gBAAI,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE;AAC5C,qBAAK,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAC,IAAI,EAAI;AACnC,2BAAO,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;iBAC3C,CAAC,CAAC;aACN;;AAED,gBAAI,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;AACvC,qBAAK,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAC,IAAI,EAAI;AAC9B,2BAAO,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC;iBAC5F,CAAC,CAAC;aACN;;AAED,gBAAI,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;AACpC,qBAAK,IAAI,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC;aACnD;;AAED,gBAAI,CAAC,KAAK,EAAE;AACR,uBAAO,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;aAC1C;;AAED,gBAAI,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;AAC7B,uBAAO,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;aAC/C,MAAM;AACH,oBAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;AACtB,wBAAI,CAAC,MAAM,GAAG,OAAO,CAAC;AACtB,2BAAO,KAAK,CAAC;iBAChB,MAAM;AACH,wBAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC1B,2BAAO,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;iBAC1C;aACJ;SACJ;;;;;2CA/E2B,eAAG;AAC3B,gBAAI,mBAAmB,CAAC,MAAM,KAAK,IAAI,EAAE;AACrC,mCAAmB,CAAC,MAAM,GAAG,0CAAuB,CAAC;aACxD;;AAED,mBAAO,mBAAmB,CAAC,MAAM,CAAC;SACrC;;;WAxCC,mBAAmB;;;AAoHzB,mBAAmB,CAAC,MAAM,GAAG,IAAI,CAAC;;qBAEnB,mBAAmB","file":"QuerySelectorHelper.js","sourcesContent":["import {CssSelectorParser} from 'css-selector-parser';\n\n/**\n * QuerySelectorHelper interface provides simple processing\n * of Element.querySelector method.\n */\nclass QuerySelectorHelper {\n    constructor(element) {\n        this.element = element;\n        this.result = null;\n    }\n\n    parse(query) {\n        let parser = QuerySelectorHelper.cssSelectorParser;\n        let rules = parser.parse(query);\n        this.result = null;\n\n        if (rules.type === 'selectors') {\n            this.processSelectors(this.element, rules.selectors);\n        } else if (rules.type === 'ruleSet') {\n            this.processRule(this.element, rules.rule);\n        }\n\n        return this.result;\n    }\n\n    parseAll(query) {\n        let parser = QuerySelectorHelper.cssSelectorParser;\n        let rules = parser.parse(query);\n        this.result = [];\n\n        if (rules.type === 'selectors') {\n            this.processSelectors(this.element, rules.selectors);\n        } else if (rules.type === 'ruleSet') {\n            this.processRule(this.element, rules.rule);\n        }\n\n        return this.result;\n    }\n\n    static get cssSelectorParser() {\n        if (QuerySelectorHelper.parser === null) {\n            QuerySelectorHelper.parser = new CssSelectorParser();\n        }\n\n        return QuerySelectorHelper.parser;\n    }\n\n    /**\n     * Function process all selectors\n     *\n     * @param element\n     * @param selectors\n     * @returns {boolean}\n     */\n    processSelectors(element, selectors) {\n        return selectors.every((selector) => {\n            return this.processRule(element, selector.rule);\n        }, this);\n    }\n\n    /**\n     * Function process one rule on element\n     *\n     * @param element\n     * @param rule\n     * @returns {boolean}\n     */\n    processRule(element, rule) {\n        return element.children.every((child) => {\n            return this.processElement(child, rule);\n        }, this);\n    }\n\n    /**\n     * Function processes one element using current rule\n     *\n     * @param element\n     * @param rule\n     * @returns {boolean}\n     */\n    processElement(element, rule) {\n        let itsMe = true;\n\n        if (itsMe && rule.hasOwnProperty('tagName')) {\n            itsMe &= element.tagName === rule.tagName;\n        }\n\n        if (itsMe && rule.hasOwnProperty('classNames')) {\n            itsMe &= rule.classNames.some((name)=> {\n                return element.classList.contains(name);\n            });\n        }\n\n        if (itsMe && rule.hasOwnProperty('attrs')) {\n            itsMe &= rule.attrs.some((attr)=> {\n                return element.hasAttribute(attr.name) && element.getAttribute(attr.name) === attr.value;\n            });\n        }\n\n        if (itsMe && rule.hasOwnProperty('id')) {\n            itsMe &= element.getAttribute('id') === rule.id;\n        }\n\n        if (!itsMe) {\n            return this.processRule(element, rule);\n        }\n\n        if (rule.hasOwnProperty('rule')) {\n            return this.processRule(element, rule.rule);\n        } else {\n            if (this.result === null) {\n                this.result = element;\n                return false;\n            } else {\n                this.result.push(element);\n                return this.processRule(element, rule);\n            }\n        }\n    }\n}\n\nQuerySelectorHelper.parser = null;\n\nexport default QuerySelectorHelper;\n"]}