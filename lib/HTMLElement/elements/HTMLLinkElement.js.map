{"version":3,"sources":["../../../src/HTMLElement/elements/HTMLLinkElement.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;4BAAwB,mBAAmB;;;;wBAC3B,iBAAiB;;;;;;;;;;;;;IAUZ,eAAe;cAAf,eAAe;;AACrB,aADM,eAAe,GAClB;8BADG,eAAe;;AAE5B,mCAFa,eAAe,6CAEpB;AACR,YAAI,CAAC,KAAK,GAAG,2BAAS,CAAC;KAC1B;;;;;;;;;;;;;;;iBAJgB,eAAe;;eAQpB,sBAAC,GAAG,EAAE,KAAK,EAAE;AACrB,uCATa,eAAe,8CAST,GAAG,EAAE,KAAK,EAAE;AAC/B,gBAAI,GAAG,KAAK,MAAM,EAAE;AAChB,oBAAI,CAAC,IAAI,GAAG,KAAK,CAAC;aACrB;SACJ;;;;;;;;;;;;aAQO,eAAG;AACP,mBAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;SAChC;;;;;;;;aAKO,aAAC,KAAK,EAAE;AACZ,gBAAI,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;AACxB,gBAAI,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;;AAElD,gBAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,EAAE,IAAI,IAAI,CAAC,aAAa,EAAE;AAClD,oBAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC;aAC9D;;AAED,gBAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,aAAa;AACrC,gBAAI,CAAC,KAAK,CAAC,IAAI,KAAK,EAAE,IACtB,IAAI,CAAC,aAAa,EAAE;AACpB,oBAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC;aACtD;SACJ;;;;;;;;;;;;aAQM,eAAG;AACN,mBAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;SACnC;;;;;;;;aAKM,aAAC,KAAK,EAAE;AACX,gBAAI,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;SACnC;;;;;;;;;;;;aAQW,eAAG;AACX,mBAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;SACxC;;;;;;;;aAKW,aAAC,KAAK,EAAE;AAChB,gBAAI,KAAK,KAAK,IAAI,EAAE;AAChB,oBAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;aACjC,MAAM;AACH,oBAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;aACpC;SACJ;;;;;;;;;;;;aAQW,eAAG;AACX,mBAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;SACxC;;;;;;;;aAKW,aAAC,KAAK,EAAE;AAChB,gBAAI,CAAC,YAAY,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SACxC;;;;;;;;;;;;aAQQ,eAAG;AACR,mBAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACrC;;;;;;;;aAKQ,aAAC,KAAK,EAAE;AACb,gBAAI,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;SACrC;;;;;;;;;;;;aAQO,eAAG;AACP,mBAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SACpC;;;;;;;;aAKO,aAAC,KAAK,EAAE;AACZ,gBAAI,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SACpC;;;WAlIgB,eAAe;;;qBAAf,eAAe;AAwIpC,MAAM,CAAC,cAAc,CAAC,eAAe,CAAC,SAAS,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC","file":"HTMLLinkElement.js","sourcesContent":["import HTMLElement from '../../HTMLElement';\nimport Url from '../../utils/Url';\n\n/**\n * The HTMLLinkElement interface represents reference information for external resources and the relationship of those\n * resources to a document and vice-versa. This object inherits all of the properties and methods of the\n * HTMLElement interface.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLLinkElement\n * @class HTMLLinkElement\n */\nexport default class HTMLLinkElement extends HTMLElement {\n    constructor() {\n        super();\n        this._href = new Url();\n    }\n    /**\n     * @inheritDoc\n     */\n    setAttribute(key, value) {\n        super.setAttribute(key, value);\n        if (key === 'href') {\n            this.href = value;\n        }\n    }\n\n    /**\n     * Is a DOMString that reflects the href HTML attribute, containing a valid URL of a linked resource.\n     *\n     * @member {string} HTMLLinkElement#href\n     * @returns {string}\n     */\n    get href() {\n        return this._href.toString();\n    }\n\n    /**\n     * @param {string} value\n     */\n    set href(value) {\n        this._href.href = value;\n        this._setAttribute('href', this._href.toString());\n\n        if (this._href.protocol === '' && this.ownerDocument) {\n            this._href.protocol = this.ownerDocument.location.protocol;\n        }\n\n        if (this._href.protocol !== 'javascript:' && // eslint-disable-line no-script-url\n            this._href.host === '' &&\n            this.ownerDocument) {\n            this._href.host = this.ownerDocument.location.host;\n        }\n    }\n\n    /**\n     * Gets or sets the forward relationship of the linked resource from the document to the resource.\n     *\n     * @member {string} HTMLLinkElement#rel\n     * @returns {string}\n     */\n    get rel() {\n        return this.getAttribute('rel');\n    }\n\n    /**\n     * @param {string} value\n     */\n    set rel(value) {\n        this.setAttribute('rel', value);\n    }\n\n    /**\n     * Gets or sets whether the link is disabled; currently only used with style sheet links.\n     *\n     * @member {boolean} HTMLLinkElement#disabled\n     * @returns {boolean}\n     */\n    get disabled() {\n        return this.hasAttribute('disabled');\n    }\n\n    /**\n     * @param {boolean} value\n     */\n    set disabled(value) {\n        if (value !== null) {\n            this.setAttribute('disabled');\n        } else {\n            this.removeAttribute('disabled');\n        }\n    }\n\n    /**\n     * Gets or sets the language code for the linked resource.\n     *\n     * @member {string} HTMLLinkElement#hreflang\n     * @returns {string}\n     */\n    get hreflang() {\n        return this.getAttribute('hreflang');\n    }\n\n    /**\n     * @param {string} value\n     */\n    set hreflang(value) {\n        this.setAttribute('hreflang', value);\n    }\n\n    /**\n     * Gets or sets a list of one or more media formats to which the resource applies.\n     *\n     * @member {string} HTMLLinkElement#media\n     * @returns {string}\n     */\n    get media() {\n        return this.getAttribute('media');\n    }\n\n    /**\n     * @param {string} value\n     */\n    set media(value) {\n        this.setAttribute('media', value);\n    }\n\n    /**\n     * Gets or sets the MIME type of the linked resource.\n     *\n     * @member {string} HTMLLinkElement#type\n     * @returns {string}\n     */\n    get type() {\n        return this.getAttribute('type');\n    }\n\n    /**\n     * @param {string} value\n     */\n    set type(value) {\n        this.setAttribute('type', value);\n    }\n}\n\n/**\n * @constant {string} HTMLLinkElement#nodeName option\n */\nObject.defineProperty(HTMLLinkElement.prototype, 'nodeName', { value: 'link' });\n\n"]}