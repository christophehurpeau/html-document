{"version":3,"sources":["../src/Attr.js"],"names":[],"mappings":";;;;;;;;;;;;4BAAyB,gBAAgB;;;;;;;;;;;;;;IASpB,IAAI;AACV,aADM,IAAI,CACT,IAAI,EAAE,KAAK,EAAE;8BADR,IAAI;;AAEjB,YAAI,CAAC,IAAI,EAAE;AACP,kBAAM,8BAAiB,uBAAuB,CAAC,CAAC;SACnD;;AAED,YAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AAC1B,YAAI,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;KAC/B;;;;;;;;;;;;;;iBARgB,IAAI;;aAkBb,eAAG;AACP,mBAAO,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC;SAC9B;;;;;;;;;;;;aAOO,eAAG;AACP,mBAAO,IAAI,CAAC,KAAK,CAAC;SACrB;;;;;;;;;;;;;aAQY,eAAG;AACZ,mBAAO,IAAI,CAAC;SACf;;;;;;;;;;;;aAOQ,eAAG;AACR,mBAAO,IAAI,CAAC,MAAM,CAAC;SACtB;;;;;;;;aAKQ,aAAC,KAAK,EAAE;AACb,gBAAI,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;SAC/B;;;WAvDgB,IAAI;;;qBAAJ,IAAI","file":"Attr.js","sourcesContent":["import DOMException from './DOMException';\n\n/**\n * This type represents a DOM element's attribute as an object. In most DOM methods, you will probably directly\n * retrieve the attribute as a string (e.g., Element.getAttribute(), but certain functions (e.g.,\n * Element.getAttributeNode()) or means of iterating give Attr types.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Attr\n */\nexport default class Attr {\n    constructor(name, value) {\n        if (!name) {\n            throw new DOMException('INVALID_CHARACTER_ERR');\n        }\n\n        this._name = String(name);\n        this._value = String(value);\n    }\n\n    /**\n     * Indicates whether the attribute is an \"ID attribute\". An \"ID attribute\" being an attribute which value is\n     * expected to be unique across a DOM Document. In HTML DOM, \"id\" is the only ID attribute, but XML documents\n     * could define others. Whether or not an attribute is unique is often determined by a DTD or other schema\n     * description.\n     *\n     * @returns {boolean}\n     */\n    get isId() {\n        return this._name === 'id';\n    }\n\n    /**\n     * The attribute's name.\n     *\n     * @returns {string}\n     */\n    get name() {\n        return this._name;\n    }\n\n    /**\n     * This property always returns true. Originally, it returned true if the attribute was explicitly specified in\n     * the source code or by a script, and false if its value came from the default one defined in the document's DTD.\n     *\n     * @returns {boolean}\n     */\n    get specified() {\n        return true;\n    }\n\n    /**\n     * The attribute's value.\n     *\n     * @returns {string}\n     */\n    get value() {\n        return this._value;\n    }\n\n    /**\n     * @param {string} value\n     */\n    set value(value) {\n        this._value = String(value);\n    }\n}\n"]}